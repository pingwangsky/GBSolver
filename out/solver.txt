# Generated using GBSolver generator Copyright Martin Bujnak,
# Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
# 
# Please refer to the following paper, when using this code :
#      Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
#      ECCV 2008, Marseille, France, October 12-18, 2008
# 
> restart:
> with(LinearAlgebra):
> interface(rtablesize = 210):
> Digits:=100:

# #
# #
# # Solver 
# #
>  
> solver:=proc(g1, g2, g3, g4)
> 
> 	local c, M, Mr, amcols, A, D1, V1, i, x, y;
> 
> 	# precalculate polynomial equations coefficients
> 	c[1] := g1:
> 	c[2] := g2:
> 	c[3] := -g1:
> 	c[4] := g3:
> 	c[5] := -g4:
> 	c[6] := 0:
> 	c[7] := 1:
> 	c[8] := 1:
> 	c[9] := -1:
> 
> 	M := Matrix(6, 10, 0):
> 	M[4, 1] := c[1]:
> 	M[3, 2] := c[1]:
> 	M[1, 5] := c[1]:
> 	M[4, 2] := c[2]:
> 	M[3, 3] := c[2]:
> 	M[1, 6] := c[2]:
> 	M[4, 3] := c[3]:
> 	M[3, 4] := c[3]:
> 	M[1, 7] := c[3]:
> 	M[4, 5] := c[4]:
> 	M[3, 6] := c[4]:
> 	M[1, 8] := c[4]:
> 	M[4, 6] := c[5]:
> 	M[3, 7] := c[5]:
> 	M[1, 9] := c[5]:
> 	M[4, 8] := c[6]:
> 	M[3, 9] := c[6]:
> 	M[1, 10] := c[6]:
> 	M[6, 1] := c[7]:
> 	M[5, 2] := c[7]:
> 	M[2, 5] := c[7]:
> 	M[6, 3] := c[8]:
> 	M[5, 4] := c[8]:
> 	M[2, 7] := c[8]:
> 	M[6, 8] := c[9]:
> 	M[5, 9] := c[9]:
> 	M[2, 10] := c[9]:
>  
> 	Mr := ReducedRowEchelonForm(M):
> 
> 	A := Matrix(4, 4, 0):
> 	amcols := [10, 9, 8, 7]:
> 	A[1, 3] := 1:
> 	A[2, 1..4] := -Mr[6, amcols]:
> 	A[3, 1..4] := -Mr[5, amcols]:
> 	A[4, 1..4] := -Mr[3, amcols]:
> 
> 	(D1, V1) := Eigenvectors(evalf(A)):
>
> 	y := Vector(4, 0): 
> 	x := Vector(4, 0): 
> 	for i from 1 to 4 do  
> 		x[i] := evalf(V1[3, i]) / evalf(V1[1, i]): 
> 		y[i] := evalf(V1[2, i]) / evalf(V1[1, i]): 
> 	end do;  
> 
> 	(x, y);
> 
> end proc:
