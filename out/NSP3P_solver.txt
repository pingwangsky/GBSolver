# Generated using GBSolver generator Copyright Martin Bujnak,
# Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
# 
# Please refer to the following paper, when using this code :
#      Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
#      ECCV 2008, Marseille, France, October 12-18, 2008
# 
> restart:
> with(LinearAlgebra):
> interface(rtablesize = 210):
> Digits:=100:

# #
# #
# # Solver 
# #
>  
> NSP3P_solver:=proc(m11, m12, m13, m14, m21, m22, m23, m24, n1, n2, n3, n4, n5, n6, n7, d1, d2, d3)
> 
> 	local c, M, Mr, amcols, A, D1, V1, i, a1, a2, a3;
> 
> 	# precalculate polynomial equations coefficients
> 	c[1] := 1:
> 	c[2] := -n1:
> 	c[3] := -n2:
> 	c[4] := n3:
> 	c[5] := n4:
> 	c[6] := n5:
> 	c[7] := n6:
> 	c[8] := n7-d3:
> 	c[9] := 1:
> 	c[10] := -m11:
> 	c[11] := 1:
> 	c[12] := -m12:
> 	c[13] := m13:
> 	c[14] := m14-d1:
> 	c[15] := 1:
> 	c[16] := -m21:
> 	c[17] := 1:
> 	c[18] := -m22:
> 	c[19] := m23:
> 	c[20] := m24-d2:
> 
> 	M := Matrix(24, 32, 0):
> 	M[17, 1] := c[1]:
> 	M[16, 2] := c[1]:
> 	M[15, 4] := c[1]:
> 	M[14, 5] := c[1]:
> 	M[13, 8] := c[1]:
> 	M[6, 13] := c[1]:
> 	M[5, 14] := c[1]:
> 	M[4, 17] := c[1]:
> 	M[1, 23] := c[1]:
> 	M[17, 2] := c[2]:
> 	M[16, 3] := c[2]:
> 	M[15, 5] := c[2]:
> 	M[14, 6] := c[2]:
> 	M[13, 9] := c[2]:
> 	M[6, 14] := c[2]:
> 	M[5, 15] := c[2]:
> 	M[4, 18] := c[2]:
> 	M[1, 24] := c[2]:
> 	M[17, 5] := c[3]:
> 	M[16, 6] := c[3]:
> 	M[15, 8] := c[3]:
> 	M[14, 9] := c[3]:
> 	M[13, 11] := c[3]:
> 	M[6, 17] := c[3]:
> 	M[5, 18] := c[3]:
> 	M[4, 20] := c[3]:
> 	M[1, 26] := c[3]:
> 	M[17, 6] := c[4]:
> 	M[16, 7] := c[4]:
> 	M[15, 9] := c[4]:
> 	M[14, 10] := c[4]:
> 	M[13, 12] := c[4]:
> 	M[6, 18] := c[4]:
> 	M[5, 19] := c[4]:
> 	M[4, 21] := c[4]:
> 	M[1, 27] := c[4]:
> 	M[17, 14] := c[5]:
> 	M[16, 15] := c[5]:
> 	M[15, 17] := c[5]:
> 	M[14, 18] := c[5]:
> 	M[13, 20] := c[5]:
> 	M[6, 23] := c[5]:
> 	M[5, 24] := c[5]:
> 	M[4, 26] := c[5]:
> 	M[1, 29] := c[5]:
> 	M[17, 15] := c[6]:
> 	M[16, 16] := c[6]:
> 	M[15, 18] := c[6]:
> 	M[14, 19] := c[6]:
> 	M[13, 21] := c[6]:
> 	M[6, 24] := c[6]:
> 	M[5, 25] := c[6]:
> 	M[4, 27] := c[6]:
> 	M[1, 30] := c[6]:
> 	M[17, 18] := c[7]:
> 	M[16, 19] := c[7]:
> 	M[15, 20] := c[7]:
> 	M[14, 21] := c[7]:
> 	M[13, 22] := c[7]:
> 	M[6, 26] := c[7]:
> 	M[5, 27] := c[7]:
> 	M[4, 28] := c[7]:
> 	M[1, 31] := c[7]:
> 	M[17, 24] := c[8]:
> 	M[16, 25] := c[8]:
> 	M[15, 26] := c[8]:
> 	M[14, 27] := c[8]:
> 	M[13, 28] := c[8]:
> 	M[6, 29] := c[8]:
> 	M[5, 30] := c[8]:
> 	M[4, 31] := c[8]:
> 	M[1, 32] := c[8]:
> 	M[21, 1] := c[9]:
> 	M[20, 4] := c[9]:
> 	M[19, 5] := c[9]:
> 	M[18, 8] := c[9]:
> 	M[9, 13] := c[9]:
> 	M[8, 14] := c[9]:
> 	M[7, 17] := c[9]:
> 	M[2, 23] := c[9]:
> 	M[21, 2] := c[10]:
> 	M[20, 5] := c[10]:
> 	M[19, 6] := c[10]:
> 	M[18, 9] := c[10]:
> 	M[9, 14] := c[10]:
> 	M[8, 15] := c[10]:
> 	M[7, 18] := c[10]:
> 	M[2, 24] := c[10]:
> 	M[21, 3] := c[11]:
> 	M[20, 6] := c[11]:
> 	M[19, 7] := c[11]:
> 	M[18, 10] := c[11]:
> 	M[9, 15] := c[11]:
> 	M[8, 16] := c[11]:
> 	M[7, 19] := c[11]:
> 	M[2, 25] := c[11]:
> 	M[21, 14] := c[12]:
> 	M[20, 17] := c[12]:
> 	M[19, 18] := c[12]:
> 	M[18, 20] := c[12]:
> 	M[9, 23] := c[12]:
> 	M[8, 24] := c[12]:
> 	M[7, 26] := c[12]:
> 	M[2, 29] := c[12]:
> 	M[21, 15] := c[13]:
> 	M[20, 18] := c[13]:
> 	M[19, 19] := c[13]:
> 	M[18, 21] := c[13]:
> 	M[9, 24] := c[13]:
> 	M[8, 25] := c[13]:
> 	M[7, 27] := c[13]:
> 	M[2, 30] := c[13]:
> 	M[21, 24] := c[14]:
> 	M[20, 26] := c[14]:
> 	M[19, 27] := c[14]:
> 	M[18, 28] := c[14]:
> 	M[9, 29] := c[14]:
> 	M[8, 30] := c[14]:
> 	M[7, 31] := c[14]:
> 	M[2, 32] := c[14]:
> 	M[24, 2] := c[15]:
> 	M[23, 4] := c[15]:
> 	M[22, 5] := c[15]:
> 	M[12, 13] := c[15]:
> 	M[11, 14] := c[15]:
> 	M[10, 17] := c[15]:
> 	M[3, 23] := c[15]:
> 	M[24, 6] := c[16]:
> 	M[23, 8] := c[16]:
> 	M[22, 9] := c[16]:
> 	M[12, 17] := c[16]:
> 	M[11, 18] := c[16]:
> 	M[10, 20] := c[16]:
> 	M[3, 26] := c[16]:
> 	M[24, 10] := c[17]:
> 	M[23, 11] := c[17]:
> 	M[22, 12] := c[17]:
> 	M[12, 20] := c[17]:
> 	M[11, 21] := c[17]:
> 	M[10, 22] := c[17]:
> 	M[3, 28] := c[17]:
> 	M[24, 15] := c[18]:
> 	M[23, 17] := c[18]:
> 	M[22, 18] := c[18]:
> 	M[12, 23] := c[18]:
> 	M[11, 24] := c[18]:
> 	M[10, 26] := c[18]:
> 	M[3, 29] := c[18]:
> 	M[24, 19] := c[19]:
> 	M[23, 20] := c[19]:
> 	M[22, 21] := c[19]:
> 	M[12, 26] := c[19]:
> 	M[11, 27] := c[19]:
> 	M[10, 28] := c[19]:
> 	M[3, 31] := c[19]:
> 	M[24, 25] := c[20]:
> 	M[23, 26] := c[20]:
> 	M[22, 27] := c[20]:
> 	M[12, 29] := c[20]:
> 	M[11, 30] := c[20]:
> 	M[10, 31] := c[20]:
> 	M[3, 32] := c[20]:
>  
> 	Mr := ReducedRowEchelonForm(M):
> 
> 	A := Matrix(8, 8, 0):
> 	amcols := [32, 31, 30, 29, 28, 27, 26, 22]:
> 	A[1, 4] := 1:
> 	A[2, 7] := 1:
> 	A[3, 1..8] := -Mr[23, amcols]:
> 	A[4, 1..8] := -Mr[22, amcols]:
> 	A[5, 1..8] := -Mr[20, amcols]:
> 	A[6, 1..8] := -Mr[18, amcols]:
> 	A[7, 1..8] := -Mr[17, amcols]:
> 	A[8, 1..8] := -Mr[11, amcols]:
> 
> 	(D1, V1) := Eigenvectors(evalf(A)):
>
> 	a3 := Vector(8, 0): 
> 	a2 := Vector(8, 0): 
> 	a1 := Vector(8, 0): 
> 	for i from 1 to 8 do  
> 		a1[i] := evalf(V1[4, i]) / evalf(V1[1, i]): 
> 		a2[i] := evalf(V1[3, i]) / evalf(V1[1, i]): 
> 		a3[i] := evalf(V1[2, i]) / evalf(V1[1, i]): 
> 	end do;  
> 
> 	(a1, a2, a3);
> 
> end proc:
